# Generated by Django 3.1 on 2020-09-25 13:17

from django.db import migrations, models
import django.utils.timezone
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.CharField(choices=[('home', 'Home'), ('about', 'About'), ('contact', 'Contact'), ('faq', 'Faq')], default='', help_text='Which page would you like this section to appear?', max_length=20)),
                ('section_type', models.CharField(choices=[('Hero', 'Hero'), ('side-image', 'Side Image')], default='', max_length=20, verbose_name='Type')),
                ('image', models.ImageField(blank=True, null=True, upload_to='section_images')),
                ('title', models.CharField(max_length=50, null=True)),
                ('subtitle', tinymce.models.HTMLField(blank=True, null=True)),
                ('button_1_link', models.URLField(blank=True, null=True)),
                ('button_1_text', models.CharField(blank=True, max_length=10, null=True)),
                ('button_2_link', models.URLField(blank=True, null=True)),
                ('button_2_text', models.CharField(blank=True, max_length=10, null=True)),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('display', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['order', 'display', 'page'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='media')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
